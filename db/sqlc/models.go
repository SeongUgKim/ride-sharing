// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Cab struct {
	ID        uuid.UUID `json:"id"`
	CabType   string    `json:"cab_type"`
	RegNo     uuid.UUID `json:"reg_no"`
	CreatedAt time.Time `json:"created_at"`
}

type Customer struct {
	ID                uuid.UUID `json:"id"`
	Username          string    `json:"username"`
	HashedPassword    string    `json:"hashed_password"`
	FullName          string    `json:"full_name"`
	Email             string    `json:"email"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
}

type Driver struct {
	ID                uuid.UUID `json:"id"`
	Username          string    `json:"username"`
	HashedPassword    string    `json:"hashed_password"`
	FullName          string    `json:"full_name"`
	Email             string    `json:"email"`
	CabID             uuid.UUID `json:"cab_id"`
	Dob               time.Time `json:"dob"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
}

type Rating struct {
	ID         uuid.UUID `json:"id"`
	CustomerID uuid.UUID `json:"customer_id"`
	DriverID   uuid.UUID `json:"driver_id"`
	TripID     uuid.UUID `json:"trip_id"`
	// must be positive
	Rating   int64          `json:"rating"`
	Feedback sql.NullString `json:"feedback"`
}

type Trip struct {
	ID         uuid.UUID     `json:"id"`
	CustomerID uuid.UUID     `json:"customer_id"`
	DriverID   uuid.NullUUID `json:"driver_id"`
	Status     string        `json:"status"`
	CreatedAt  time.Time     `json:"created_at"`
}
